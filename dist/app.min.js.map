{"version":3,"sources":["app.js"],"names":["express","require","app","randomColor","disable","req","res","sendFile","__dirname","process","env","PORT","console","log","io","server","connnections","on","socket","push","color","username","uuid","data","id","v4","nickName","users","updateUsernames","sockets","emit","message","broadcast","user","undefined","i","length","filter","x","splice","indexOf"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,IAAMF,UADNA,KAAOC,QAAGA,QAGZE,YAAcF,QAAQ,eAFpBC,KAAMF,QAAZ,QAMAE,IAAIE,QAAQ,gBAAZF,IAAIE,IAAAA,IAAQ,SAAAC,EAAAC,GAGZA,EAAAC,SAAAC,UAAA,wBAIIF,OAAIC,IAAAA,IAASC,MAAAA,OAAYC,QAAAC,IAAAC,MAAzB,IAAA,WAGJC,QAAAC,IAAA,iBAAAJ,QAAAC,IAAAC,QAGC,IAEDG,GAAAb,QAAA,YAAAA,CAAAc,QACMD,MAAKb,GAGPe,aAAe,GAGnBF,GAAGG,GAAG,aAAc,SAACC,GAAlBD,QAAGJ,IAAA,sBACFD,aAAYO,KAAAD,GAGZ,IAAIE,EAAQjB,cAEZe,EAAOG,SAAW,YAClBH,EAAOE,MAAQA,EAIXF,EAAMD,GAAGK,kBAAW,SAAAC,GAApB,IAAIC,EAAKF,KAAKG,KACdP,EAAAM,GAAAA,EACAN,EAAOG,SAAeE,EAACG,SACvBC,MAAAR,KAAW,CAAAK,GAAAA,EAAAH,SAAAH,EAAAG,SAAAD,MAAAF,EAAAE,QAAIQ,MACfA,IAAAA,EAAe,WAGnBd,GAAAe,QAAAC,KAAA,YAAAH,QAlB4BT,EAuB5BD,GAAA,cAAA,SAAAM,GAGIT,GAAGe,QAAQC,KAAK,cAAe,CAAEC,QAASR,EAAKQ,QAASV,SAAUH,EAAOG,SAAUD,MAAOF,EAAOE,UAAhEW,EAAAA,GAAO,SAAOA,SAAAA,GAASV,EAAQW,UAASX,KAAAA,SAA1C,CAAAA,SAAAH,EAAAG,aASnCH,EAAOD,GAAG,aAAc,SAAAM,GAJpBL,GAAOc,EAAPX,SAAAH,CAUA,IAPJ,IAAAe,OAAAC,EAOaC,EAAI,EAAGA,EAAIR,MAAMS,OAAQD,IAN5B,GAAAR,MAAAQ,GAAVX,KAAwBN,EAAAK,GAAQ,CAEhBF,EAAAA,MACRc,GAMI,MAHRR,MAAUA,MAAOU,OAAQ,SAAAC,GAACF,OAAAA,IAASH,IAE3BA,IACAjB,aAAAuB,OAAAvB,aAAAwB,QAAAtB,GAAA","file":"app.min.js","sourcesContent":["const express = require('express');\nconst app = express();\nvar cors = require('cors');\nlet randomColor = require('randomcolor');\nconst uuid = require('uuid');\n\n//Disable x-powered-by header\napp.disable('x-powered-by')\n\n//middlewares\n// app.use(express.static('client'));\n\n//routes\napp.get('/', (req, res) => {\n    res.sendFile(__dirname + '/client/index.html');\n});\n\n//Listen on port 5000\nserver = app.use(cors).listen(process.env.PORT || 5000, () => {\n    console.log('server running' + process.env.PORT);\n});\n\n//socket.io instantiation\nconst io = require(\"socket.io\")(server);\n\nlet users = [];\nlet connnections = [];\n\n//listen on every connection\nio.on('connection', (socket) => {\n    console.log('New user connected');\n    connnections.push(socket)\n    //initialize a random color for the socket\n    let color = randomColor();\n\n    socket.username = 'Anonymous';\n    socket.color = color;\n\n    //listen on change_username\n    socket.on('change_username', data => {\n        let id = uuid.v4(); // create a random id for the user\n        socket.id = id;\n        socket.username = data.nickName;\n        users.push({ id, username: socket.username, color: socket.color });\n        updateUsernames();\n    })\n\n    //update Usernames in the client\n    const updateUsernames = () => {\n        io.sockets.emit('get users', users)\n    }\n\n    //listen on new_message\n    socket.on('new_message', (data) => {\n        //broadcast the new message\n        io.sockets.emit('new_message', { message: data.message, username: socket.username, color: socket.color });\n    })\n\n    //listen on typing\n    socket.on('typing', data => {\n        socket.broadcast.emit('typing', { username: socket.username })\n    })\n\n    //Disconnect\n    socket.on('disconnect', data => {\n\n        if (!socket.username)\n            return;\n        //find the user and delete from the users list\n        let user = undefined;\n        for (let i = 0; i < users.length; i++) {\n            if (users[i].id === socket.id) {\n                user = users[i];\n                break;\n            }\n        }\n        users = users.filter(x => x !== user);\n        //Update the users list\n        updateUsernames();\n        connnections.splice(connnections.indexOf(socket), 1);\n    })\n})\n"]}