{"version":3,"sources":["chat.js"],"names":["$","socket","io","connect","message","send_message","chatroom","feedback","usersList","nickName","click","emit","val","keypress","e","keycode","keyCode","which","on","data","html","append","color","username","keepTheChatRoomToTheBottom","i","length","document","getElementById","scrollTop","scrollHeight","clientHeight"],"mappings":"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","sourcesContent":["$(function () {\n    //make connection\n    let socket = io.connect('http://localhost:5000');\n\n    //buttons and inputs\n    let message = $(\"#message\");\n    let send_message = $(\"#send_message\");\n    let chatroom = $(\"#chatroom\");\n    let feedback = $(\"#feedback\");\n    let usersList = $(\"#users-list\");\n    let nickName = $(\"#nickname-input\");\n\n    //Emit message\n    // If send message btn is clicked\n    send_message.click(function () {\n        socket.emit('new_message', { message: message.val() })\n    });\n    // Or if the enter key is pressed\n    message.keypress(e => {\n        let keycode = (e.keyCode ? e.keyCode : e.which);\n        if (keycode == '13') {\n            socket.emit('new_message', { message: message.val() })\n        }\n    })\n\n    //Listen on new_message\n    socket.on(\"new_message\", (data) => {\n        feedback.html('');\n        message.val('');\n        //append the new message on the chatroom\n        chatroom.append(`\n                        <div>\n                            <div class=\"box3 sb14\">\n                              <p style='color:${data.color}' class=\"chat-text user-nickname\">${data.username}</p>\n                              <p class=\"chat-text\" style=\"color: rgba(0,0,0,0.87)\">${data.message}</p>\n                            </div>\n                        </div>\n                        `)\n        keepTheChatRoomToTheBottom()\n    });\n\n    //Emit a username\n    nickName.keypress(e => {\n        let keycode = (e.keyCode ? e.keyCode : e.which);\n        if (keycode == '13') {\n            socket.emit('change_username', { nickName: nickName.val() });\n            socket.on('get users', data => {\n                let html = '';\n                for (let i = 0; i < data.length; i++) {\n                    html += `<li class=\"list-item\" style=\"color: ${data[i].color}\">${data[i].username}</li>`;\n                }\n                usersList.html(html)\n            })\n        }\n    });\n\n    //Emit typing\n    message.on(\"keypress\", e => {\n        let keycode = (e.keyCode ? e.keyCode : e.which);\n        if (keycode != '13') {\n            socket.emit('typing')\n        }\n    });\n\n    //Listen on typing\n    socket.on('typing', (data) => {\n        feedback.html(\"<p><i>\" + data.username + \" is typing a message...\" + \"</i></p>\")\n    });\n});\n\n// function thats keeps the chatbox stick to the bottom\nconst keepTheChatRoomToTheBottom = () => {\n    const chatroom = document.getElementById('chatroom');\n    chatroom.scrollTop = chatroom.scrollHeight - chatroom.clientHeight;\n}\n"],"file":"chat.dev.js"}