{"version":3,"sources":["chat.js"],"names":["$","socket","io","connect","message","send_message","chatroom","feedback","usersList","click","emit","val","keypress","e","keyCode","which","keycode","on","data","html","append","concat","color","username","nickName","i","length","getElementById","document","scrollTop","scrollHeight","clientHeight"],"mappings":"aAAAA,EAAE,WAAA,IAAAC,EAAYC,GAAAC,QAAA,yBAKNC,EAAUJ,EAAE,YAAZI,EAAYJ,EAAA,iBACZK,EAAYL,EAAGA,aACfM,EAAaN,EAAA,aACbO,EAAaP,EAAA,eACbQ,EAAaR,EAAC,mBAKlBK,EAAaI,MAAM,WACfR,EAAAS,KAAY,cAAe,CAAAN,QAAAA,EAAAO,UAD/BP,EAGAQ,SAAA,SAAAC,GACiB,OACEA,EAAEC,QAAUD,EAAEC,QAAUD,EAAEE,QAArCC,EAAYN,KAACI,cAAF,CAAAV,QAAfA,EAAAO,UAE+BV,EAA3BgB,GAAA,cAAA,SAAAC,GACHX,EAAAY,KAAA,IAGLf,EAAAO,IAAA,IACML,EAAIc,OAAJ,wIAAAC,OAOsCH,EAAKI,MAP3C,uCAAAD,OAOqFH,EAAKK,SAP1F,6FAAAF,OAIFH,EAAAd,QAJE,uGAgBNoB,+BAGQvB,EAAOS,SAAK,SAAAG,GAAZ,OAA2CW,EAAAA,QAAAX,EAAAC,QAAAD,EAAAE,SACrCd,EAAIS,KAAA,kBAAiB,CAAIc,SAAAA,EAAAb,QACvBQ,EAAOF,GAAX,YAAA,SAAAC,GACK,IADL,IAAIC,EAAO,GACMM,EAAGP,EAAIO,EAACC,EAAQD,OAAKA,IAC9BN,GAAA,uCAAAE,OAA2CH,EAAKO,GAAGH,MAAnD,MAAAD,OAAAH,EAAAO,GAAAF,SAAA,SAERf,EAAUW,KAAKA,QAM3Bf,EAAAa,GAAW,WAAY,SAAAJ,GAEJ,OADEC,EAAAA,QAAYA,EAAAA,QAAYC,EAAzCA,QACIC,EAAWN,KAAf,YAMJT,EAAAgB,GAAU,SAAU,SAAAC,GAChBX,EAAAY,KAAc,SAAeD,EAACK,SAAW,uCAM7C,IAAMjB,2BAAoBqB,WAC1BrB,IAAQA,EAARsB,SAAqBtB,eAAA,YAFzBA,EAAAuB,UAAAvB,EAAAwB,aAAAxB,EAAAyB","file":"chat.min.js","sourcesContent":["$(function () {\n    //make connection\n    let socket = io.connect('http://localhost:5000');\n\n    //buttons and inputs\n    let message = $(\"#message\");\n    let send_message = $(\"#send_message\");\n    let chatroom = $(\"#chatroom\");\n    let feedback = $(\"#feedback\");\n    let usersList = $(\"#users-list\");\n    let nickName = $(\"#nickname-input\");\n\n    //Emit message\n    // If send message btn is clicked\n    send_message.click(function () {\n        socket.emit('new_message', { message: message.val() })\n    });\n    // Or if the enter key is pressed\n    message.keypress(e => {\n        let keycode = (e.keyCode ? e.keyCode : e.which);\n        if (keycode == '13') {\n            socket.emit('new_message', { message: message.val() })\n        }\n    })\n\n    //Listen on new_message\n    socket.on(\"new_message\", (data) => {\n        feedback.html('');\n        message.val('');\n        //append the new message on the chatroom\n        chatroom.append(`\n                        <div>\n                            <div class=\"box3 sb14\">\n                              <p style='color:${data.color}' class=\"chat-text user-nickname\">${data.username}</p>\n                              <p class=\"chat-text\" style=\"color: rgba(0,0,0,0.87)\">${data.message}</p>\n                            </div>\n                        </div>\n                        `)\n        keepTheChatRoomToTheBottom()\n    });\n\n    //Emit a username\n    nickName.keypress(e => {\n        let keycode = (e.keyCode ? e.keyCode : e.which);\n        if (keycode == '13') {\n            socket.emit('change_username', { nickName: nickName.val() });\n            socket.on('get users', data => {\n                let html = '';\n                for (let i = 0; i < data.length; i++) {\n                    html += `<li class=\"list-item\" style=\"color: ${data[i].color}\">${data[i].username}</li>`;\n                }\n                usersList.html(html)\n            })\n        }\n    });\n\n    //Emit typing\n    message.on(\"keypress\", e => {\n        let keycode = (e.keyCode ? e.keyCode : e.which);\n        if (keycode != '13') {\n            socket.emit('typing')\n        }\n    });\n\n    //Listen on typing\n    socket.on('typing', (data) => {\n        feedback.html(\"<p><i>\" + data.username + \" is typing a message...\" + \"</i></p>\")\n    });\n});\n\n// function thats keeps the chatbox stick to the bottom\nconst keepTheChatRoomToTheBottom = () => {\n    const chatroom = document.getElementById('chatroom');\n    chatroom.scrollTop = chatroom.scrollHeight - chatroom.clientHeight;\n}\n"]}